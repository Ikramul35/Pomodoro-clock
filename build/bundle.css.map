{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\CountDown.svelte",
    "..\\..\\Settings.svelte"
  ],
  "sourcesContent": [
    "<script>\n    import Card from '@smui/card/bare';\n    import '@smui/card/bare.css';\n    import Tab, { Label } from '@smui/tab/bare';\n    import '@smui/tab/bare.css';\n    import TabBar from '@smui/tab-bar/bare';\n    import '@smui/tab-bar/bare.css';\n    import CountDown from './components/CountDown.svelte';\n    import Settings from './components/Settings.svelte';\n\n    let active = 'Clock';\n</script>\n\n<style>\n    main {\n        width: 100vw;\n        height: 100vh;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n    .container {\n        min-width: 400px;\n        max-width: 100%;\n    }\n</style>\n\n<main>\n    <div class=\"container\">\n        <Card>\n            <TabBar tabs={['Clock', 'Setting']} let:tab bind:active>\n                <Tab {tab}>\n                    <Label>{tab}</Label>\n                </Tab>\n            </TabBar>\n            {#if active == 'Clock'}\n                <CountDown />\n            {:else}\n                <Settings />\n            {/if}\n        </Card>\n    </div>\n</main>\n",
    "<script>\r\n    import Button, { Icon, Label } from '@smui/button/bare';\r\n    import '@smui/button/bare.css';\r\n    import { workDur, breakDur, longBreakDur, noOfSession } from '../stores';\r\n    import { onDestroy } from 'svelte';\r\n\r\n    let min = $workDur;\r\n    let sec = 0;\r\n    let ctr = null;\r\n    let takingBreak = true;\r\n    let currentSession = $noOfSession;\r\n\r\n    $: countDown = `${min < 10 ? '0' : ''}${min}:${sec < 10 ? '0' : ''}${sec}`;\r\n\r\n    let decCtr = () => {\r\n        if (min == 0 && sec == 0) {\r\n            nextCtr();\r\n        } else if (sec == 0) {\r\n            min--;\r\n            sec = 59;\r\n        } else {\r\n            sec--;\r\n        }\r\n    };\r\n\r\n    let ctrStart = () => {\r\n        if (ctr != null) return;\r\n        ctr = setInterval(decCtr, 1000);\r\n    };\r\n\r\n    let ctrPause = () => {\r\n        clearInterval(ctr);\r\n        ctr = null;\r\n    };\r\n\r\n    let ctrReset = () => {\r\n        ctrPause();\r\n        min = $workDur;\r\n        sec = 0;\r\n    };\r\n\r\n    let nextCtr = () => {\r\n        takingBreak = !takingBreak;\r\n        if (currentSession == 0) {\r\n            min = $longBreakDur;\r\n            currentSession = $noOfSession;\r\n            alert('Long Break Starting');\r\n        } else if (takingBreak) {\r\n            min = $breakDur;\r\n            alert('Break Starting');\r\n        } else {\r\n            currentSession--;\r\n            min = $workDur;\r\n            alert('Session Starting');\r\n        }\r\n        console.log(takingBreak);\r\n        ctrStart();\r\n    };\r\n\r\n    onDestroy(ctrPause);\r\n</script>\r\n\r\n<style>\r\n    p {\r\n        font-size: 5rem;\r\n        text-align: center;\r\n        margin: 10px 0;\r\n    }\r\n    .btn-container {\r\n        display: flex;\r\n        justify-content: space-evenly;\r\n        margin-bottom: 10px;\r\n        font-weight: bold;\r\n    }\r\n</style>\r\n\r\n<p>{countDown}</p>\r\n<div class=\"btn-container\">\r\n    <Button on:click={ctrPause}>\r\n        <Icon class=\"material-icons\">pause_circle_outline</Icon>\r\n        <Label>Pause</Label>\r\n    </Button>\r\n    <Button on:click={nextCtr}>\r\n        <Icon class=\"material-icons\">play_circle_outline</Icon>\r\n        <Label>Start</Label>\r\n    </Button>\r\n    <Button on:click={ctrReset}>\r\n        <Icon class=\"material-icons\">replay</Icon>\r\n        <Label>Reset</Label>\r\n    </Button>\r\n</div>\r\n",
    "<script>\r\n    import Slider from '@smui/slider/bare';\r\n    import '@smui/slider/bare.css';\r\n    import { workDur, breakDur, longBreakDur, noOfSession } from '../stores';\r\n</script>\r\n\r\n<style>\r\n    form {\r\n        padding: 20px;\r\n    }\r\n    .form-container {\r\n        width: 100%;\r\n        padding: 0 10px;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n\r\n    .form-container span:last-child {\r\n        display: inline-block;\r\n        margin-left: 10px;\r\n    }\r\n</style>\r\n\r\n<form>\r\n    <p>Work Time</p>\r\n    <div class=\"form-container\">\r\n        <Slider bind:value={$workDur} min={1} max={60} discrete />\r\n        <span>{$workDur}</span>\r\n    </div>\r\n    <p>Break Time</p>\r\n    <div class=\"form-container\">\r\n        <Slider bind:value={$breakDur} min={1} max={60} discrete />\r\n        <span>{$breakDur}</span>\r\n    </div>\r\n    <p>Long Break Time</p>\r\n    <div class=\"form-container\">\r\n        <Slider bind:value={$longBreakDur} min={1} max={60} discrete />\r\n        <span>{$longBreakDur}</span>\r\n    </div>\r\n    <p>Session</p>\r\n    <div class=\"form-container\">\r\n        <Slider bind:value={$noOfSession} min={1} max={10} discrete />\r\n        <span>{$noOfSession}</span>\r\n    </div>\r\n</form>\r\n"
  ],
  "names": [],
  "mappings": "AAcI,IAAI,eAAC,CAAC,AACF,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,KAAK,CACb,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,WAAW,CAAE,MAAM,AACvB,CAAC,AACD,UAAU,eAAC,CAAC,AACR,SAAS,CAAE,KAAK,CAChB,SAAS,CAAE,IAAI,AACnB,CAAC;ACuCD,CAAC,cAAC,CAAC,AACC,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CAAC,CAAC,AAClB,CAAC,AACD,cAAc,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,YAAY,CAC7B,aAAa,CAAE,IAAI,CACnB,WAAW,CAAE,IAAI,AACrB,CAAC;AClED,IAAI,8BAAC,CAAC,AACF,OAAO,CAAE,IAAI,AACjB,CAAC,AACD,eAAe,8BAAC,CAAC,AACb,KAAK,CAAE,IAAI,CACX,OAAO,CAAE,CAAC,CAAC,IAAI,CACf,OAAO,CAAE,IAAI,CACb,WAAW,CAAE,MAAM,AACvB,CAAC,AAED,8BAAe,CAAC,mBAAI,WAAW,AAAC,CAAC,AAC7B,OAAO,CAAE,YAAY,CACrB,WAAW,CAAE,IAAI,AACrB,CAAC"
}